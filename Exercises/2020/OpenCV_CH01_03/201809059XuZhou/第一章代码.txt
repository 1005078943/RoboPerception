#include <iostream>
#include <stdio.h>
#include <opencv2/opencv.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/opencv.hpp>
using namespace cv;
using namespace std;
int main(void)
{

	Mat M(2, 2, CV_8UC3, Scalar(0, 0, 255));
	cout << "M = " << endl << "" << M << endl << endl;
	/*//查看版本
	char c[10] = CV_VERSION;
	printf("\t当前使用的opencv版本为 OpenCV %s",c);
	*/
	/*//printf示例
	int a = 66, b = 88;
	printf("\n\t\%d %d\n",a,b);
	printf("\n\t\%06d, %06d\n", a, b);
	printf("\n\t\%c, %c\n", a, b);
	printf("\n\t结果:a=%d,b=%d",a,b);
	getchar;
	*/
	/*//调用摄像头
	 VideoCapture cature(0);
	Mat edgs;
	
	while (1) {
		Mat frame;
		cature >> frame;//读取帧
		imshow("tt", frame);
		waitKey(30);
	}
	
	 	while (1) {
			Mat frame;
			cature >> frame;
			cvtColor(frame, edgs, COLOR_BGR2GRAY);//灰度图

	blur(edgs, edgs, Size(7, 7));//模糊处理主要是降噪
	 Canny(edgs, edgs, 0, 30, 3);//边沿化
			imshow("tt", edgs);
			if (waitKey(30) >= 0)
				break;
		}

		  */
	/*视频读取
	//VideoCapture capture("https://www.bilibili.com/video/BV1xf4y117os");
	VideoCapture capture("D:\\Alcibiado\\Work\\3.mp4");//视频读取
	while (1)
	{
		Mat frame;
		capture >> frame;//数据流传输
		imshow("ship", frame);//网络视频不可本地视频可 但无法播放太长时间
		waitKey(30);
	}
	*/
	/*//图片边缘化
	Mat srcImage =imread("D:\\Alcibiado\\Work\\001.jpg");
	imshow("bianyuan", srcImage);
	Mat dstImage, edge, grayImage,ed;
	dstImage.create(srcImage.size(), srcImage.type());
	cvtColor(srcImage, grayImage, COLOR_BGR2Lab);//cv2的常量不行,cvtcolor()函数是一个颜色空间转换函数，可以实现RGB颜色向HSV，HSI等颜色空间转换。也可以转换为灰度图
	imshow("效果1", grayImage);
	blur(grayImage,edge, Size(3, 3));//降噪
	Canny(edge, ed, 3, 6, 3,true);//边缘化
	imshow("效", edge);
	imshow("效果", ed);
	waitKey(0);*/
	/*Canny(edge, ed, 3, 9, 3);
第一个参数：输入图像（八位的图像）输入原图（必须为单通道图）
第二个参数：输出的边缘图像
第三个参数：下限阈值，如果像素梯度低于下限阈值，则将像素不被认为边缘
第四个参数：上限阈值，如果像素梯度高于上限阈值，则将像素被认为是边缘（建议上限是下限的2倍或者3倍）
第五个参数：为Sobel()运算提供内核大小，默认值为3//最好bu要改
第六个参数：计算图像梯度幅值的标志，默认值为false,值为false：使用L1范数（直接将两个方向导数的绝对值相加）*/
	
	/*//图形模糊
	Mat srcImage = imread("D:\\Alcibiado\\Work\\001.jpg");
	imshow("mohu", srcImage);
	Mat dstImage;//新图
	blur(srcImage, dstImage, Size(7, 7));//第五个参数，int类型的borderType，用于推断图像外部像素的某种边界模式,有默认值BORDER_DEFAULT，我们一般不去管它。
	imshow("xiaoguo", dstImage);
	waitKey(0);
	*/
	/* 图像显示
	Mat  img = imread("D:\\Alcibiado\\Work\\001.jpg");//图像读入
	imshow("test01", img);//图像显示
	waitKey(0);//显示延迟*/
	

	/*图像腐蚀
	Mat  img = imread("D:\\Alcibiado\\Work\\001.jpg");//图像读入
	Mat ele = getStructuringElement(MORPH_ELLIPSE, Size(15, 15));
	/*第一个参数是处理核形状，二是处理核位置，三是处理核锚点*/
	/*
	Mat dsImage;
	erode(img, dsImage, ele);//腐蚀操作
	imshow("trw", dsImage);
	waitKey(0);
	*/
	 

}

